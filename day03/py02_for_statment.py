# for문 : 프로그래밍의 꽃이라 할 수 있다
#         반복을 처리할 때 사용 

# ******사용방법*******
# for 변수 in 반복할 값 :
#       구문실행 


## EX01
# 아래와 같이 출력되는 프로그램을 작성하시오
# range() 범위를 생성해주느 클래스 
# ******사용방법*******
# 마지막수 : max - 1
# range(init, max, add) # 0,2,4,6,. 

# -- 반복문 시작 --
# print(range(0,8))

# for i in range (0,8): # => for i in [0, 1 ,2, 3, 4, 5,6,7]  이러한 조건이 참일동안에만 반복!
#     print(i)
# -- 반복문 끝 --
    
    
# 출력값 
# range(0, 8)
# 0
# 1
# 2
# 3
# 4
# 5
# 6
# 7

#-----------
## EX02
# range(init, max, add) # 0,2,4,6,. 

# -- 반복문 시작 --
# for i in range (0,8,2): 
#     print(i)
# -- 반복문 끝 --

# 출력값 
# range(0, 8, 2)
# 0
# 2
# 4
# 6    

#-----------
## EX03
# *
# **
# ***
# ****

# -- 반복문 시작 --
# num = int(input('최대별수 : '))
# for i in range(1, num+1) :
#     print('*' * i)
# -- 반복문 끝 --

#-----------
## EX04
# 문제1)구구단 -> 2단부터 9단까지 출력 2 X 1 = 2,...
# 문제2) 한줄에 각 단씩 출력되도록 
# 문제3) 출력값 정렬
# 문제4) x * y 값이 항상 두줄씩 표현되도록 
# 문제5) 단(x) 시작 표기

# -- 반복문 시작 --
# for x in range(2,9+1):
#     print(f'{x}단 시작')
    
#     for y in range(1,9+1):
#         print(f'{x} x {y} = {x * y:2d}', end='  ') # f-string 이용 , 
#         #******** 출력값 자리수 2개로 만들게 고정(스트링포맷 사용) -> 2d *********
#     print() # 한줄 내리기 
        
# print('구구단 종료 \n\n\n\n\n')

# -- 반복문 끝 --

#-----------
## EX05
# 반복문을 빠져나올 때 : break
# 반복문에서 특정 조건을 지나칠 때 : continue

# -- 반복문 시작 --
for x in range(2,9+1):
    # if x == 8: break # for문의 위치에 따라서 break 출력 값이 다르다!!!
    # if x == 8 : continue # continue는 if문의 (조건)에 해당하는 값을 pass 

    print(f'{x}단 시작')
    
    for y in range(1,9+1):
        
        print(f'{x} x {y} = {x * y:2d}', end='  ') # f-string 이용 , 
        #******** 출력값 자리수 2개로 만들게 고정(스트링포맷 사용) -> 2d *********
    print() # 한줄 내리기 
        
print('구구단 종료 \n\n\n\n\n')

# -- 반복문 끝 --
