# 문자열 포맷팅
## ex01

# name = input('로그인 할 이름 입력 >')

loginTemp = '안녕하세요, %s님!' # %s -> 문자열이 들어올 것이다.
# name = '유고'
# print(loginTemp % (name)) #출력값 => 안녕하세요, 유고님!


# print(loginTemp % (name))
# 출력값 => 로그인 할 이름 입력 >홍여원
        # 안녕하세요, 홍여원님!
        
#-------------------------------------
## ex02
# 구세대 문자열 포맷팅 => %s,...사용

intro = '나는 %s (이)고, %d살 입니다. 몸무게 %fkg 입니다.'
print(intro % ('여원', 28, 70.1))
# 출력값 => 나는 여원 (이)고, 28살 입니다. 몸무게 70.100000kg 입니다.

intro = '나는 %10s (이)고, %03d살 입니다. 몸무게 %03.1fkg 입니다.' 
# %숫자+s.d.f -> 숫자만큼 공백란을 만들어라

print(intro % ('여원', 28, 70.1))
# 출력값 => 나는         여원 (이)고, 028살 입니다. 몸무게 70.1kg 입니다.

#-------------------------------------
## ex03
# 중간세대 문자열 포맷팅 => .format()사용
## {0:>10s} 로 %10s와 동일하게 적용, > 정렬을 의미

intro = '나는{0:>10s}이고, {1}살입니다. 몸무게는 {2}입니다'

print(intro.format('요키', 5, 5.48))

#-------------------------------------
## ex04
# 신세대 문자열 포맷팅 => f-string 사용

name = '나다'
age = 3 
weight = 3.5

print(f'나는 {name}이고, {age}살입니다. 몸무게는 {weight}kg입니다') 
# f-string은 구문이 간결하고 직관적이어서 사용
# 사용방법 => f'...'와 같은 형식으로 문자열을 정의할 때 변수나 표현식을 {} 안에 넣을 수 있다